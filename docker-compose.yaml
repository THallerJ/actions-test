services:
  client-dev:
    image: hallert60/tab-machine
    container_name: client-dev
    depends_on:
      - db-dev
    env_file:
      - .env
    ports:
      - 4000:3000
    environment:
      - WATCHPACK_POLLING=true
      - AUTH0_SECRET=auth0secret
      - AUTH0_BASE_URL=http://localhost:4000
      - API_URL=http://localhost:4000
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=db-dev
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=database
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

  client-e2e:
    image: hallert60/tab-machine
    healthcheck:
      test: ['CMD-SHELL', 'wget -O /dev/null http://localhost:3000 || exit 1']
      timeout: 10s
    env_file:
      - .env
    container_name: client-e2e
    depends_on:
      - db-e2e
    ports:
      - 3000:3000
    expose:
      - 3000
    environment:
      - WATCHPACK_POLLING=true
      - AUTH0_SECRET=auth0secret
      - AUTH0_BASE_URL=http://localhost:3000
      - API_URL=http://localhost:3000
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=db-e2e
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=database
    volumes:
      - ${APP_DIR}:/app
      - /app/node_modules
      - /app/.next
  db-dev:
    container_name: db-dev
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: database
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./postgres_scripts/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  db-e2e:
    container_name: db-e2e
    image: postgres
    expose:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: database
    volumes:
      - ${APP_DIR}/postgres_scripts/create_tables.sql:/docker-entrypoint-initdb.d/create-tables.sql

  playwright-test:
    image: hallert60/playwright-tab
    env_file:
      - .env
    volumes:
      - ${APP_DIR}/e2e:/app/e2e
      - ${APP_DIR}/playwright.config.ts:/app/playwright.config.ts
      - ./playwright-report:/app/playwright-report
    container_name: playwright-test
    network_mode: host
    command: npx playwright test --workers 4 --trace on
    depends_on:
      client-e2e:
        condition: service_healthy

volumes:
  postgres-db-volume:
